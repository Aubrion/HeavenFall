<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collision_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

buffs = 0; // 2D array. Second dimension contains: [0]stat, [1]type, [2]value, [3]duration

// Status array
status_init();

// Base Stats
base_str = 0;
base_def = 0;
base_agi = 0;
base_int = 0;
base_will = 0;
base_mspeed = 0;
base_damage = 0;

// Stats
str = 0;
def = 0;
agi = 0;
int = 0;
will = 0;
mspeed = 0;
damage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Buffs
var temp_buffs = 0;

// Set up buff_values array. 2nd dimension: +number, +percentage, -number, -percentage
var buff_values = 0;
for (var i = 0; i &lt; 7; i++) // Repeat for every buffable stat
{
    for (var j = 0; j &lt; 4; j++)
        buff_values[i,j] = 0;
}

// Loop through all buffs
for (var i = 0; i &lt; array_height_2d(buffs); i++)
{
    // Reduce duration
    buffs[i,4]--;

    // Store in temp array if not expired
    if (buffs[i,4] &gt; 0)
    {
        var temp_index = array_height_2d(temp_buffs);
        for (var j = 0; j &lt; 5; j++)
            temp_buffs[temp_index,j] = buffs[i,j];
    }

    // Store buff value
    var value_index = (buffs[i,0] * 2) + buffs[i,2];
    buff_values[buffs[i,1], value_index] += buffs[i,3];
}

// Reset buffs array
buffs = 0;

// Copy the contents of temp_buffs into buffs
for (var i = 0; i &lt; array_height_2d(temp_buffs); i++)
    for (var j = 0; j &lt; array_length_2d(temp_buffs,i); j++)
        buffs[i,j] = temp_buffs[i,j];

// Apply buff values
for (var i = 0; i &lt; array_height_2d(buff_values); i++)
{
    // Get base value for this stat
    var temp_value = buff_get_stat_base(self, i);
    
    // Apply the stored values
    temp_value += buff_values[i,0];
    temp_value += buff_values[i,1] / 100 * temp_value;
    temp_value += buff_values[i,2];
    temp_value -= buff_values[i,3] / 100 * temp_value;
    
    // Set the stat tot the new value
    buff_set_stat(id, i, temp_value);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Status effects
status_step();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
